<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>docker-build-image</artifactId>
        <groupId>com.welldo</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>spotify</artifactId>




    <properties>
        <java.version>1.8</java.version>
        <!--阿里云需要命名空间, 这个私服不需要-->
        <docker.zhfw.registry>192.168.35.158:5000</docker.zhfw.registry>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <!-- docker镜像辅助插件,add by wangduo -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.13</version>

                <executions>
                    <execution>
                        <id>wd1_build</id>
                        <goals>  <goal>build</goal> </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>wd2_push</id>
                        <goals><goal>push</goal></goals>
                        <phase>verify</phase>
                    </execution>
                </executions>

                <configuration>
                    <repository>${docker.zhfw.registry}/${project.artifactId}</repository>
                    <tag>3.0</tag>
                    <buildArgs>
                        <!-- ${project.artifactId}-${project.version} -->
                        <!-- 举例: docker-registry-0.0.1-SNAPSHOT-->
                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>

                    </buildArgs>
                </configuration>
            </plugin>

            <!-- 在default周期的validate阶段,绑定clean周期的clean目标,add by wangduo -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>clean-target</id><!-- 任务id, 自定义,需要唯一 -->
                        <goals>
                            <goal>clean</goal><!-- 任务中插件的目标，可以指定多个 -->
                        </goals>
                        <phase>validate</phase><!-- 绑定的阶段 -->
                    </execution>
                </executions>
            </plugin>
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        </plugins>
    </build>

</project>